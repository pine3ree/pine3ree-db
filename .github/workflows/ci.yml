# GitHub Actions workflow for Continuos Integration tests
name: CI

on: [push, pull_request]

env:
  COMPOSER_ARGS: '--no-interaction --no-progress --prefer-dist --optimize-autoloader'

jobs:

  build-and-test:

    strategy:
      fail-fast: false
      matrix:
        operating-systems: [ubuntu-latest]
        php-versions: ['7.1']
        composer-deps: ['latest']

    runs-on: ${{ matrix.operating-systems }}

    services:
      
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: p3_db_test
          MYSQL_ROOT_PASSWORD: secret123
          MYSQL_HOST: '%'
          MYSQL_USER: p3_db_testuser
          MYSQL_PASSWORD: secret123
          MYSQL_AUTHENTICATION_PLUGIN: mysql_native_password
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      # Docs: https://github.com/shivammathur/setup-php
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          coverage: xdebug
          extensions: pdo, pdo_mysql

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache Composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ matrix.php-versions }}-${{ matrix.composer-deps }}-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ matrix.php-versions }}-${{ matrix.composer-deps }}
            ${{ runner.os }}-composer-${{ matrix.php-versions }}
            ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        id: composer-install
        run: composer install ${{ env.COMPOSER_ARGS }}
        
      - name: Update Composer dependencies to latest
        id: composer-update-latest
        if: ${{ matrix.composer-deps == 'latest' }}
        run: composer update ${{ env.COMPOSER_ARGS }}

      - name: Test MySQL connection
        run: mysql --host=localhost --protocol=TCP --port=3306 --user=p3_db_testuser --password=secret123 -e "SHOW DATABASES"

      - name: Run PHP code
        id: php
        env:
          __MYSQL_HOST: localhost
          __MYSQL_PORT: 3306
        shell: php {0}
        run: |
          <?php
          $pdo = new PDO('mysql:host=localhost;dbname=p3_db_test;charset=utf8', 'p3_db_testuser', 'secret123');
          $stmt = $pdo->query("SHOW DATABASES");
          if ($stmt) {
            print_r($stmt->fetchAll(\PDO::FETCH_ASSOC));
          }
          ?>
