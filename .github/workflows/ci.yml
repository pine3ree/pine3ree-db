# GitHub Actions workflow for Continuos Integration tests
name: CI

on: [push, pull_request]

env:
  COMPOSER_ARGS: '--no-interaction --no-progress --prefer-dist --optimize-autoloader'

jobs:

  build-and-test:

    strategy:
      matrix:
        operating-systems: [ubuntu-latest]
        php-versions: ['7.1', '7.2', '7.3', '7.4', '8.0']
        composer-deps: ['lowest', 'latest']

    runs-on: ${{ matrix.operating-systems }}

    # Service containers to run with this job
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:9-alpine
        # Provide the default database, username, password for postgres
        env:
          POSTGRES_DB: p3_db_test
          POSTGRES_USER: p3_db_testuser
          POSTGRES_PASSWORD: secret123
        ports:
          # Maps tcp port 5432 on service container to the host 5432 port
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 6s
          --health-timeout 3s
          --health-retries 3

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      # Docs: https://github.com/shivammathur/setup-php
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          coverage: xdebug

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache Composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ matrix.php-versions }}${{ matrix.composer-deps }}-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ matrix.php-versions }}${{ matrix.composer-deps }}
            ${{ runner.os }}-composer-${{ matrix.php-versions }}
            ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        id: composer-install
        run: composer install ${{ env.COMPOSER_ARGS }}

      - name: Update Composer dependencies to lowest stable
        id: composer-update-lowest
        if: ${{ matrix.composer-deps == 'lowest' }}
        run: composer update ${{ env.COMPOSER_ARGS }} --prefer-lowest --prefer-stable

      - name: Update Composer dependencies to latest
        id: composer-update-latest
        if: ${{ matrix.composer-deps == 'latest' }}
        run: composer update ${{ env.COMPOSER_ARGS }}

      - name: Code Style check (phpcs)
        id: phpcs
        run: composer cs

      - name: Static Analysis (phpstan)
        id: phpstan
        run: composer stan

      - name: Test (phpunit)
        id: phpunit
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
        run: composer test
        